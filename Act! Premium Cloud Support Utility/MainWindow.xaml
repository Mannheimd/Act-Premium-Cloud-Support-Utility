<Window x:Class="Act__Premium_Cloud_Support_Utility.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Act__Premium_Cloud_Support_Utility"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="APC Support Utility - Beta v0.1.2" Height="736" Width="950" MinHeight="250" MinWidth="868">
    <Window.Resources>
        <!-- Converters -->
        <local:ListBoxSelectedState_Converter x:Key="ListBoxSelectedStateConverter"/>
        <local:AccountType_Converter x:Key="AccountTypeConverter"/>
        <local:AccountTrialOrPaid_Converter x:Key="AccountTrialOrPaidConverter"/>
        <local:AccountStatus_Converter x:Key="AccountStatusConverter"/>

        <!-- Colours -->
        <SolidColorBrush Color="#CDCDC8" x:Key="lightFontColour"/>
        <SolidColorBrush Color="#374650" x:Key="darkFontColour"/>

        <!-- Text -->
        <Style TargetType="{x:Type Control}" x:Key="smallFont">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource darkFontColour}"/>
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="normalFont">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource darkFontColour}"/>
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="largeFont">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="{StaticResource darkFontColour}"/>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource normalFont}"/>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource normalFont}"/>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource normalFont}"/>
        <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource normalFont}"/>

        <!-- ListBox -->
        <Style TargetType="{x:Type ListBox}" x:Key="listBoxStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style TargetType="ListBox" BasedOn="{StaticResource listBoxStyle}"/>

        <!-- ListBoxItem -->
        <Style TargetType="{x:Type Control}" x:Key="listBoxItem">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="OuterBorder" BorderThickness="1" BorderBrush="Transparent" Background="White">
                            <Border Name="InnerBorder" BorderThickness="0" BorderBrush="Transparent">
                                <ContentPresenter />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="#0AB4DC"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="white"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="#CDCDC8"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="listBoxItemHorizonal">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{StaticResource darkFontColour}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="OuterBorder" BorderThickness="1" BorderBrush="#262F8CC6" Background="White"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Name="InnerBorder" BorderThickness="0" BorderBrush="Transparent"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter />
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="#0AB4DC"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="white"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="#CDCDC8"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBoxItem" BasedOn="{StaticResource listBoxItem}"/>

        <!-- Button -->
        <Style TargetType="{x:Type Button}" x:Key="lightButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource lightFontColour}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#939389"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="darkButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource darkFontColour}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#328CC3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="LookupListPane" Grid.Column="0" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#374650">
            <Label Content="My Lookups" Style="{StaticResource largeFont}" Margin="10,8,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="{StaticResource lightFontColour}"/>
            <Button x:Name="LookupListPane_NewLookup_Button"
                    Content="{iconPacks:PackIconMaterialLight Plus, Height=20, Width=20}"
                    Height="22" Width="22"
                    VerticalAlignment="Top" HorizontalAlignment="Right"
                    Margin="0,16,16,0"
                    Style="{StaticResource lightButton}"/>
            <ListBox Margin="0,55,0,0"
                     HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                     x:Name="LookupListPane_Lookups_ListBox">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Label Margin="3,1,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource normalFont}" Content="{Binding accountName}"/>
                            <Label Margin="3,25,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource smallFont}" Content="{Binding lookupTime}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <Grid x:Name="LookupResultsPane" Grid.Column="1" Margin="0,0,0,0"
              Visibility="{Binding ElementName=LookupListPane_Lookups_ListBox, Path=SelectedItem, Converter={StaticResource ListBoxSelectedStateConverter}}"
              DataContext="{Binding ElementName=LookupListPane_Lookups_ListBox, Path=SelectedItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="28"/>
            </Grid.RowDefinitions>
            <Grid x:Name="LookupResultsBasicInfoPane" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="15,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Label Style="{StaticResource largeFont}"
                       Grid.Column="0" Grid.Row="0"
                       Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.accountName}"/>
                <Label Style="{StaticResource normalFont}"
                       Grid.Column="1" Grid.Row="0"
                       Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.accountNumber}"/>
                <Label Style="{StaticResource normalFont}"
                       Grid.Column="0" Grid.Row="1"
                       Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.accountType, Converter={StaticResource AccountTypeConverter}}"/>
                <Label Style="{StaticResource normalFont}"
                       Grid.Column="1" Grid.Row="1"
                       Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.accountEmail}"/>
                <Label Style="{StaticResource normalFont}"
                       Grid.Column="0" Grid.Row="3"
                       Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.trialOrPaid, Converter={StaticResource AccountTrialOrPaidConverter}}"/>
                <Label Style="{StaticResource normalFont}"
                       Grid.Column="0" Grid.Row="4"
                       Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.suspendStatus, Converter={StaticResource AccountStatusConverter}, ConverterParameter=DataContext.archiveStatus|DataContext.deleteStatus}"/>
                <Label Style="{StaticResource normalFont}"
                       Grid.Column="0" Grid.Row="5"
                       Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Hyperlink NavigateUri="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.loginUrl}" RequestNavigate="Hyperlink_RequestNavigate">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.loginUrl}"/>
                    </Hyperlink>
                </Label>
            </Grid>
            <Grid x:Name="LookupResultsScreenSelectPane" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
                <ListBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBoxItem Content="Databases" Style="{StaticResource listBoxItemHorizonal}"/>
                    <ListBoxItem Content="Details" Style="{StaticResource listBoxItemHorizonal}"/>
                    <ListBoxItem Content="Activity" Style="{StaticResource listBoxItemHorizonal}"/>
                </ListBox>
            </Grid>
        </Grid>
    </Grid>
</Window>